// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: logic/logic.proto

package logic

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server  string   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	ConnIds []string `protobuf:"bytes,2,rep,name=conn_ids,json=connIds,proto3" json:"conn_ids,omitempty"`
	Msg     []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PushMsg) Reset() {
	*x = PushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMsg) ProtoMessage() {}

func (x *PushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMsg.ProtoReflect.Descriptor instead.
func (*PushMsg) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{0}
}

func (x *PushMsg) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *PushMsg) GetConnIds() []string {
	if x != nil {
		return x.ConnIds
	}
	return nil
}

func (x *PushMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type ConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin      string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Server   string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	Token    string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Device   string `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *ConnectReq) Reset() {
	*x = ConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReq) ProtoMessage() {}

func (x *ConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReq.ProtoReflect.Descriptor instead.
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *ConnectReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ConnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *ConnectReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConnectReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type ConnectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConnId       string `protobuf:"bytes,3,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	KickedConnId string `protobuf:"bytes,4,opt,name=kicked_conn_id,json=kickedConnId,proto3" json:"kicked_conn_id,omitempty"`
	KickedReason string `protobuf:"bytes,5,opt,name=kicked_reason,json=kickedReason,proto3" json:"kicked_reason,omitempty"`
}

func (x *ConnectRsp) Reset() {
	*x = ConnectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRsp) ProtoMessage() {}

func (x *ConnectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRsp.ProtoReflect.Descriptor instead.
func (*ConnectRsp) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ConnectRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConnectRsp) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

func (x *ConnectRsp) GetKickedConnId() string {
	if x != nil {
		return x.KickedConnId
	}
	return ""
}

func (x *ConnectRsp) GetKickedReason() string {
	if x != nil {
		return x.KickedReason
	}
	return ""
}

type DisconnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin      string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *DisconnectReq) Reset() {
	*x = DisconnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectReq) ProtoMessage() {}

func (x *DisconnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectReq.ProtoReflect.Descriptor instead.
func (*DisconnectReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{3}
}

func (x *DisconnectReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *DisconnectReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type DisconnectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisconnectRsp) Reset() {
	*x = DisconnectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRsp) ProtoMessage() {}

func (x *DisconnectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRsp.ProtoReflect.Descriptor instead.
func (*DisconnectRsp) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{4}
}

type HeartbeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin    string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	ConnId string `protobuf:"bytes,2,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *HeartbeatReq) Reset() {
	*x = HeartbeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReq) ProtoMessage() {}

func (x *HeartbeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReq.ProtoReflect.Descriptor instead.
func (*HeartbeatReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *HeartbeatReq) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

func (x *HeartbeatReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type HeartbeatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatRsp) Reset() {
	*x = HeartbeatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRsp) ProtoMessage() {}

func (x *HeartbeatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRsp.ProtoReflect.Descriptor instead.
func (*HeartbeatRsp) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{6}
}

type SendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId        string   `protobuf:"bytes,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	ConvType      int32    `protobuf:"varint,2,opt,name=conv_type,json=convType,proto3" json:"conv_type,omitempty"`
	MsgType       int32    `protobuf:"varint,3,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	Sender        string   `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	Target        string   `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	Content       string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Extra         string   `protobuf:"bytes,7,opt,name=extra,proto3" json:"extra,omitempty"`
	AtUserList    []string `protobuf:"bytes,8,rep,name=at_user_list,json=atUserList,proto3" json:"at_user_list,omitempty"`
	IsTransparent bool     `protobuf:"varint,9,opt,name=is_transparent,json=isTransparent,proto3" json:"is_transparent,omitempty"`
}

func (x *SendReq) Reset() {
	*x = SendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReq) ProtoMessage() {}

func (x *SendReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReq.ProtoReflect.Descriptor instead.
func (*SendReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{7}
}

func (x *SendReq) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

func (x *SendReq) GetConvType() int32 {
	if x != nil {
		return x.ConvType
	}
	return 0
}

func (x *SendReq) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *SendReq) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *SendReq) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *SendReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendReq) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *SendReq) GetAtUserList() []string {
	if x != nil {
		return x.AtUserList
	}
	return nil
}

func (x *SendReq) GetIsTransparent() bool {
	if x != nil {
		return x.IsTransparent
	}
	return false
}

type SendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id       int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	SendTime int64  `protobuf:"varint,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	Seq      int64  `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *SendRsp) Reset() {
	*x = SendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRsp) ProtoMessage() {}

func (x *SendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRsp.ProtoReflect.Descriptor instead.
func (*SendRsp) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{8}
}

func (x *SendRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendRsp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendRsp) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *SendRsp) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type SyncMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin    string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	ConnId string `protobuf:"bytes,2,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SyncMsgReq) Reset() {
	*x = SyncMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMsgReq) ProtoMessage() {}

func (x *SyncMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMsgReq.ProtoReflect.Descriptor instead.
func (*SyncMsgReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{9}
}

func (x *SyncMsgReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *SyncMsgReq) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

func (x *SyncMsgReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SyncMsgReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SyncMsgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Msg `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SyncMsgRsp) Reset() {
	*x = SyncMsgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMsgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMsgRsp) ProtoMessage() {}

func (x *SyncMsgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMsgRsp.ProtoReflect.Descriptor instead.
func (*SyncMsgRsp) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{10}
}

func (x *SyncMsgRsp) GetList() []*Msg {
	if x != nil {
		return x.List
	}
	return nil
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ConvType   int32    `protobuf:"varint,2,opt,name=conv_type,json=convType,proto3" json:"conv_type,omitempty"`
	Type       int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Content    string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Sender     string   `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	Target     string   `protobuf:"bytes,6,opt,name=target,proto3" json:"target,omitempty"`
	Extra      string   `protobuf:"bytes,7,opt,name=extra,proto3" json:"extra,omitempty"`
	SendTime   int64    `protobuf:"varint,8,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	AtUserList []string `protobuf:"bytes,9,rep,name=at_user_list,json=atUserList,proto3" json:"at_user_list,omitempty"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{11}
}

func (x *Msg) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Msg) GetConvType() int32 {
	if x != nil {
		return x.ConvType
	}
	return 0
}

func (x *Msg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Msg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Msg) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Msg) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Msg) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *Msg) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *Msg) GetAtUserList() []string {
	if x != nil {
		return x.AtUserList
	}
	return nil
}

type MsgAckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgAckReq) Reset() {
	*x = MsgAckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAckReq) ProtoMessage() {}

func (x *MsgAckReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAckReq.ProtoReflect.Descriptor instead.
func (*MsgAckReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{12}
}

func (x *MsgAckReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgAckRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAckRsp) Reset() {
	*x = MsgAckRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAckRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAckRsp) ProtoMessage() {}

func (x *MsgAckRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAckRsp.ProtoReflect.Descriptor instead.
func (*MsgAckRsp) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{13}
}

var File_logic_logic_proto protoreflect.FileDescriptor

var file_logic_logic_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x22, 0x4e, 0x0a, 0x07, 0x50, 0x75,
	0x73, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x9e, 0x01,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3d,
	0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x0f, 0x0a,
	0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x22, 0x51,
	0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x22, 0x0e, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x73,
	0x70, 0x22, 0x83, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x76, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x76, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x20,
	0x0a, 0x0c, 0x61, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x22,
	0x65, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x2c, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x76, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x09,
	0x4d, 0x73, 0x67, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x4d, 0x73, 0x67,
	0x41, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x32, 0xbf, 0x02, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x63,
	0x12, 0x31, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x11, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x12, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x13, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x73, 0x67, 0x12, 0x0e, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67,
	0x12, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x41,
	0x63, 0x6b, 0x12, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4d, 0x73, 0x67,
	0x41, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x7a, 0x74, 0x63, 0x6a, 0x6a, 0x6c, 0x2f, 0x7a,
	0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x3b, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logic_logic_proto_rawDescOnce sync.Once
	file_logic_logic_proto_rawDescData = file_logic_logic_proto_rawDesc
)

func file_logic_logic_proto_rawDescGZIP() []byte {
	file_logic_logic_proto_rawDescOnce.Do(func() {
		file_logic_logic_proto_rawDescData = protoimpl.X.CompressGZIP(file_logic_logic_proto_rawDescData)
	})
	return file_logic_logic_proto_rawDescData
}

var file_logic_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_logic_logic_proto_goTypes = []interface{}{
	(*PushMsg)(nil),       // 0: logic.PushMsg
	(*ConnectReq)(nil),    // 1: logic.ConnectReq
	(*ConnectRsp)(nil),    // 2: logic.ConnectRsp
	(*DisconnectReq)(nil), // 3: logic.DisconnectReq
	(*DisconnectRsp)(nil), // 4: logic.DisconnectRsp
	(*HeartbeatReq)(nil),  // 5: logic.HeartbeatReq
	(*HeartbeatRsp)(nil),  // 6: logic.HeartbeatRsp
	(*SendReq)(nil),       // 7: logic.SendReq
	(*SendRsp)(nil),       // 8: logic.SendRsp
	(*SyncMsgReq)(nil),    // 9: logic.SyncMsgReq
	(*SyncMsgRsp)(nil),    // 10: logic.SyncMsgRsp
	(*Msg)(nil),           // 11: logic.Msg
	(*MsgAckReq)(nil),     // 12: logic.MsgAckReq
	(*MsgAckRsp)(nil),     // 13: logic.MsgAckRsp
}
var file_logic_logic_proto_depIdxs = []int32{
	11, // 0: logic.SyncMsgRsp.list:type_name -> logic.Msg
	1,  // 1: logic.Logic.Connect:input_type -> logic.ConnectReq
	3,  // 2: logic.Logic.Disconnect:input_type -> logic.DisconnectReq
	5,  // 3: logic.Logic.Heartbeat:input_type -> logic.HeartbeatReq
	7,  // 4: logic.Logic.SendMsg:input_type -> logic.SendReq
	9,  // 5: logic.Logic.SyncMsg:input_type -> logic.SyncMsgReq
	12, // 6: logic.Logic.MsgAck:input_type -> logic.MsgAckReq
	2,  // 7: logic.Logic.Connect:output_type -> logic.ConnectRsp
	4,  // 8: logic.Logic.Disconnect:output_type -> logic.DisconnectRsp
	6,  // 9: logic.Logic.Heartbeat:output_type -> logic.HeartbeatRsp
	8,  // 10: logic.Logic.SendMsg:output_type -> logic.SendRsp
	10, // 11: logic.Logic.SyncMsg:output_type -> logic.SyncMsgRsp
	13, // 12: logic.Logic.MsgAck:output_type -> logic.MsgAckRsp
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_logic_logic_proto_init() }
func file_logic_logic_proto_init() {
	if File_logic_logic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logic_logic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMsgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAckRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logic_logic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logic_logic_proto_goTypes,
		DependencyIndexes: file_logic_logic_proto_depIdxs,
		MessageInfos:      file_logic_logic_proto_msgTypes,
	}.Build()
	File_logic_logic_proto = out.File
	file_logic_logic_proto_rawDesc = nil
	file_logic_logic_proto_goTypes = nil
	file_logic_logic_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogicClient is the client API for Logic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicClient interface {
	Connect(ctx context.Context, in *ConnectReq, opts ...grpc.CallOption) (*ConnectRsp, error)
	Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectRsp, error)
	Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc.CallOption) (*HeartbeatRsp, error)
	SendMsg(ctx context.Context, in *SendReq, opts ...grpc.CallOption) (*SendRsp, error)
	SyncMsg(ctx context.Context, in *SyncMsgReq, opts ...grpc.CallOption) (*SyncMsgRsp, error)
	MsgAck(ctx context.Context, in *MsgAckReq, opts ...grpc.CallOption) (*MsgAckRsp, error)
}

type logicClient struct {
	cc grpc.ClientConnInterface
}

func NewLogicClient(cc grpc.ClientConnInterface) LogicClient {
	return &logicClient{cc}
}

func (c *logicClient) Connect(ctx context.Context, in *ConnectReq, opts ...grpc.CallOption) (*ConnectRsp, error) {
	out := new(ConnectRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectRsp, error) {
	out := new(DisconnectRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc.CallOption) (*HeartbeatRsp, error) {
	out := new(HeartbeatRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) SendMsg(ctx context.Context, in *SendReq, opts ...grpc.CallOption) (*SendRsp, error) {
	out := new(SendRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/SendMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) SyncMsg(ctx context.Context, in *SyncMsgReq, opts ...grpc.CallOption) (*SyncMsgRsp, error) {
	out := new(SyncMsgRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/SyncMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) MsgAck(ctx context.Context, in *MsgAckReq, opts ...grpc.CallOption) (*MsgAckRsp, error) {
	out := new(MsgAckRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/MsgAck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicServer is the server API for Logic service.
type LogicServer interface {
	Connect(context.Context, *ConnectReq) (*ConnectRsp, error)
	Disconnect(context.Context, *DisconnectReq) (*DisconnectRsp, error)
	Heartbeat(context.Context, *HeartbeatReq) (*HeartbeatRsp, error)
	SendMsg(context.Context, *SendReq) (*SendRsp, error)
	SyncMsg(context.Context, *SyncMsgReq) (*SyncMsgRsp, error)
	MsgAck(context.Context, *MsgAckReq) (*MsgAckRsp, error)
}

// UnimplementedLogicServer can be embedded to have forward compatible implementations.
type UnimplementedLogicServer struct {
}

func (*UnimplementedLogicServer) Connect(context.Context, *ConnectReq) (*ConnectRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedLogicServer) Disconnect(context.Context, *DisconnectReq) (*DisconnectRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedLogicServer) Heartbeat(context.Context, *HeartbeatReq) (*HeartbeatRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedLogicServer) SendMsg(context.Context, *SendReq) (*SendRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMsg not implemented")
}
func (*UnimplementedLogicServer) SyncMsg(context.Context, *SyncMsgReq) (*SyncMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncMsg not implemented")
}
func (*UnimplementedLogicServer) MsgAck(context.Context, *MsgAckReq) (*MsgAckRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgAck not implemented")
}

func RegisterLogicServer(s *grpc.Server, srv LogicServer) {
	s.RegisterService(&_Logic_serviceDesc, srv)
}

func _Logic_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Connect(ctx, req.(*ConnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Disconnect(ctx, req.(*DisconnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Heartbeat(ctx, req.(*HeartbeatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_SendMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).SendMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/SendMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).SendMsg(ctx, req.(*SendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_SyncMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).SyncMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/SyncMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).SyncMsg(ctx, req.(*SyncMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_MsgAck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAckReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).MsgAck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/MsgAck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).MsgAck(ctx, req.(*MsgAckReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logic.Logic",
	HandlerType: (*LogicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Logic_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Logic_Disconnect_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _Logic_Heartbeat_Handler,
		},
		{
			MethodName: "SendMsg",
			Handler:    _Logic_SendMsg_Handler,
		},
		{
			MethodName: "SyncMsg",
			Handler:    _Logic_SyncMsg_Handler,
		},
		{
			MethodName: "MsgAck",
			Handler:    _Logic_MsgAck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic/logic.proto",
}
